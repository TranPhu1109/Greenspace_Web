import React, { useEffect, useState } from 'react';
import { Layout, Typography, Row, Col, Card, Button, Statistic, BackTop, Divider } from 'antd';
import {
  ShopOutlined,
  BulbOutlined,
  ToolOutlined,
  RocketOutlined,
  CheckCircleOutlined,
  TeamOutlined,
  HeartOutlined,
  EnvironmentOutlined,
  TrophyOutlined,
  SmileOutlined,
  ArrowRightOutlined,
  UserOutlined,
  StarOutlined,
  LikeOutlined,
  SafetyCertificateOutlined,
  ShoppingOutlined,
  CustomerServiceOutlined,
  UpCircleOutlined,
} from '@ant-design/icons';
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import CountUp from 'react-countup';
import AOS from 'aos';
import 'aos/dist/aos.css';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import './styles.scss';
import heroImage from '@/assets/thiet-ke-va-thi-cong-san-vuon.jpg';

const { Content } = Layout;
const { Title, Paragraph, Text } = Typography;

const AboutPage = () => {
  const [scrollY, setScrollY] = useState(0);
  const [activeSection, setActiveSection] = useState("about-hero");

  useEffect(() => {
    AOS.init({
      duration: 1000,
      easing: 'ease-out-cubic',
      once: false,
      mirror: true,
      offset: 120,
      delay: 100,
    });
    
    const handleScroll = () => {
      setScrollY(window.scrollY);
      
      // Track active section
      const sections = ['about-hero', 'about-stats', 'about-services', 'about-features', 'about-cta'];
      const currentSection = sections.find(section => {
        const element = document.getElementById(section);
        if (!element) return false;
        
        const rect = element.getBoundingClientRect();
        return rect.top <= 200 && rect.bottom >= 200;
      });
      
      if (currentSection && currentSection !== activeSection) {
        setActiveSection(currentSection);
      }
    };

    window.addEventListener('scroll', handleScroll);
    handleScroll(); // Initialize on mount

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [activeSection]);

  const scrollToSection = (sectionId) => {
    const section = document.getElementById(sectionId);
    if (section) {
      window.scrollTo({
        top: section.offsetTop - 80,
        behavior: 'smooth'
      });
    }
  };

  // Calculate parallax effects based on scroll position
  const heroParallax = scrollY * 0.4;
  const statsParallax = (scrollY - 800) * 0.2;

  const services = [
    {
      icon: <BulbOutlined className="service-icon" />,
      title: 'Thi·∫øt k·∫ø m·∫´u',
      description: 'Kh√°m ph√° b·ªô s∆∞u t·∫≠p thi·∫øt k·∫ø m·∫´u ƒëa d·∫°ng v√† ƒë·ªôc ƒë√°o cho kh√¥ng gian xanh c·ªßa b·∫°n. T·ª´ v∆∞·ªùn ban c√¥ng ƒë·∫øn s√¢n v∆∞·ªùn r·ªông l·ªõn.',
      link: '/designs',
      color: '#36cfc9',
      iconBg: 'rgba(54, 207, 201, 0.1)'
    },
    {
      icon: <RocketOutlined className="service-icon" />,
      title: 'Thi·∫øt k·∫ø theo y√™u c·∫ßu',
      description: 'ƒê·∫∑t thi·∫øt k·∫ø ri√™ng theo √Ω t∆∞·ªüng v√† mong mu·ªën c·ªßa b·∫°n v·ªõi ƒë·ªôi ng≈© thi·∫øt k·∫ø chuy√™n nghi·ªáp. T∆∞ v·∫•n v√† ph√°c th·∫£o mi·ªÖn ph√≠.',
      link: '/designs',
      color: '#ff7a45',
      iconBg: 'rgba(255, 122, 69, 0.1)'
    },
    {
      icon: <ShopOutlined className="service-icon" />,
      title: 'V·∫≠t li·ªáu trang tr√≠',
      description: 'Cung c·∫•p ƒëa d·∫°ng v·∫≠t li·ªáu trang tr√≠ ch·∫•t l∆∞·ª£ng cao cho kh√¥ng gian xanh. T·ª´ ch·∫≠u c√¢y ngh·ªá thu·∫≠t ƒë·∫øn ƒë√®n trang tr√≠ ƒë·ªôc ƒë√°o.',
      link: '/products',
      color: '#9254de',
      iconBg: 'rgba(146, 84, 222, 0.1)'
    },
  ];

  const features = [
    'ƒê·ªôi ng≈© thi·∫øt k·∫ø chuy√™n nghi·ªáp v·ªõi h∆°n 10 nƒÉm kinh nghi·ªám',
    'T∆∞ v·∫•n v√† h·ªó tr·ª£ 24/7 qua ƒëi·ªán tho·∫°i v√† chat tr·ª±c tuy·∫øn',
    'S·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao v·ªõi gi√° c·∫£ c·∫°nh tranh, b·∫£o h√†nh d√†i h·∫°n',
    'Giao h√†ng nhanh ch√≥ng v√† ƒë·∫£m b·∫£o trong 24h n·ªôi th√†nh',
    'Thanh to√°n an to√†n v√† ti·ªán l·ª£i v·ªõi nhi·ªÅu ph∆∞∆°ng th·ª©c',
    'Ch√≠nh s√°ch b·∫£o h√†nh v√† ƒë·ªïi tr·∫£ linh ho·∫°t trong 30 ng√†y',
  ];

  const stats = [
    {
      title: 'Kh√°ch h√†ng',
      value: 5000,
      icon: <SmileOutlined className="stat-icon" style={{ color: '#52c41a' }} />,
      suffix: '+',
    },
    {
      title: 'D·ª± √°n ho√†n th√†nh',
      value: 1000,
      icon: <TrophyOutlined className="stat-icon" style={{ color: '#1890ff' }} />,
      suffix: '+',
    },
    {
      title: 'ƒê√°nh gi√° 5 sao',
      value: 98,
      icon: <HeartOutlined className="stat-icon" style={{ color: '#fa8c16' }} />,
      suffix: '%',
    },
    {
      title: 'T·ªânh th√†nh ph·ª•c v·ª•',
      value: 63,
      icon: <EnvironmentOutlined className="stat-icon" style={{ color: '#f5222d' }} />,
      suffix: '',
    },
  ];

  const values = [
    {
      title: 'S√°ng t·∫°o',
      description: 'Lu√¥n ƒë·ªïi m·ªõi v√† t√¨m ki·∫øm nh·ªØng √Ω t∆∞·ªüng ƒë·ªôc ƒë√°o',
      color: '#f5222d',
      icon: 'üé®',
    },
    {
      title: 'Ch·∫•t l∆∞·ª£ng',
      description: 'Cam k·∫øt mang ƒë·∫øn s·∫£n ph·∫©m v√† d·ªãch v·ª• t·ªët nh·∫•t',
      color: '#52c41a',
      icon: '‚ú®',
    },
    {
      title: 'T·∫≠n t√¢m',
      description: 'L·∫Øng nghe v√† th·∫•u hi·ªÉu nhu c·∫ßu c·ªßa kh√°ch h√†ng',
      color: '#1890ff',
      icon: 'üíô',
    },
  ];

  return (
    <Layout className="about-layout">
      <Header />
      <Content>
        {/* Section Indicators */}
        <div className="section-indicators">
          {['about-hero', 'about-stats', 'about-services', 'about-features', 'about-cta'].map((section) => (
            <div
              key={section}
              className={`indicator ${activeSection === section ? 'active' : ''}`}
              onClick={() => scrollToSection(section)}
              aria-label={`Scroll to ${section} section`}
            />
          ))}
        </div>

        {/* Hero Section */}
        <section id="about-hero" className="hero-section section-container">
          <div className="hero-background">
            <div 
              className="parallax-bg" 
              style={{ transform: `translateY(${heroParallax}px)` }}
            />
            <div className="shape shape-1"></div>
            <div className="shape shape-2"></div>
            <div className="shape shape-3"></div>
          </div>
          
          <div className="container">
            <Row gutter={[48, 48]} align="middle">
              <Col xs={24} md={12}>
                <div className="hero-content" data-aos="fade-right" data-aos-delay="100">
                  <div className="hero-badge">
                    <span>Kh√¥ng gian xanh</span>
                  </div>
                  <Title level={1} className="hero-title">
                    V·ªÅ Green Space
                  </Title>
                  <Title level={3} className="subtitle">
                    Ch√∫ng t√¥i mang ƒë·∫øn gi·∫£i ph√°p to√†n di·ªán cho kh√¥ng gian xanh c·ªßa b·∫°n
                  </Title>
                  <Paragraph className="hero-description">
                    Green Space l√† n·ªÅn t·∫£ng k·∫øt n·ªëi gi·ªØa kh√°ch h√†ng v·ªõi c√°c d·ªãch v·ª• thi·∫øt k·∫ø v√† cung c·∫•p v·∫≠t li·ªáu cho kh√¥ng gian xanh. 
                    Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn nh·ªØng gi·∫£i ph√°p s√°ng t·∫°o v√† ch·∫•t l∆∞·ª£ng nh·∫•t cho m·ªçi d·ª± √°n, t·ª´ nh·ªØng khu v∆∞·ªùn nh·ªè ƒë·∫øn c√°c c√¥ng tr√¨nh c·∫£nh quan l·ªõn.
                  </Paragraph>
                  <Link to="/designs">
                    <Button type="primary" size="large" className="explore-button ripple-btn">
                      Kh√°m ph√° ngay <ArrowRightOutlined />
                    </Button>
                  </Link>
                </div>
              </Col>
              <Col xs={24} md={12}>
                <div className="hero-image-container" data-aos="fade-left" data-aos-delay="200">
                  <img
                    src={heroImage}
                    alt="Green Space Hero"
                    className="hero-image"
                  />
                  <div className="image-decoration"></div>
                </div>
              </Col>
            </Row>
          </div>

          <div className="scroll-indicator">
            <div className="mouse">
              <div className="wheel"></div>
            </div>
            <div className="scroll-arrow"></div>
            <div className="scroll-arrow"></div>
            <div className="scroll-arrow"></div>
          </div>
        </section>

        <div className="section-divider">
          <div className="divider-line"></div>
          <div className="divider-icon">
            <StarOutlined />
          </div>
          <div className="divider-line"></div>
        </div>

        {/* Stats Section */}
        <section id="about-stats" className="stats-section section-container">
          <div 
            className="stats-background"
            style={{ transform: `translateY(${statsParallax}px)` }}
          ></div>
          <div className="container">
            <Title level={2} className="section-title" data-aos="fade-up">
              Th√†nh t·ª±u c·ªßa ch√∫ng t√¥i
            </Title>
            <Paragraph className="section-subtitle" data-aos="fade-up" data-aos-delay="100">
              Ch√∫ng t√¥i t·ª± h√†o v·ªÅ nh·ªØng th√†nh t·ª±u ƒë√£ ƒë·∫°t ƒë∆∞·ª£c c√πng v·ªõi kh√°ch h√†ng. Nh·ªØng con s·ªë n√†y th·ªÉ hi·ªán cam k·∫øt c·ªßa ch√∫ng t√¥i v·ªÅ ch·∫•t l∆∞·ª£ng v√† s·ª± h√†i l√≤ng.
            </Paragraph>
            <Row gutter={[32, 32]} justify="center">
              {stats.map((stat, index) => (
                <Col xs={24} sm={12} lg={6} key={stat.title}>
                  <Card className="stat-card" data-aos="zoom-in" data-aos-delay={100 + index * 100}>
                    {stat.icon}
                    <Statistic title={stat.title} value={stat.value} suffix={stat.suffix} />
                  </Card>
                </Col>
              ))}
            </Row>
          </div>
        </section>

        <div className="section-divider">
          <div className="divider-line"></div>
          <div className="divider-icon">
            <ToolOutlined />
          </div>
          <div className="divider-line"></div>
        </div>

        {/* Services Section */}
        <section id="about-services" className="services-section section-container">
          <div className="services-decoration">
            <div className="dot-pattern"></div>
          </div>
          <div className="container">
            <div data-aos="fade-up">
              <Title level={2} className="section-title">D·ªãch v·ª• c·ªßa ch√∫ng t√¥i</Title>
              <Paragraph className="section-subtitle">
                Gi·∫£i ph√°p to√†n di·ªán cho kh√¥ng gian xanh c·ªßa b·∫°n - t·ª´ thi·∫øt k·∫ø ƒë·∫øn thi c√¥ng, t·ª´ s·∫£n ph·∫©m ƒë·∫øn d·ªãch v·ª•
              </Paragraph>
            </div>
            <Row gutter={[32, 32]}>
              {services.map((service, index) => (
                <Col xs={24} sm={12} lg={8} key={service.title}>
                  <Card 
                    className="service-card" 
                    data-aos="fade-up" 
                    data-aos-delay={100 + index * 100}
                  >
                    <div className="service-icon-wrapper" style={{ background: service.color + '10' }}>
                      <span className="service-icon-inner" style={{ color: service.color }}>
                        {service.icon}
                      </span>
                    </div>
                    <h4>{service.title}</h4>
                    <Paragraph>{service.description}</Paragraph>
                    <Link to={service.link} className="service-link">
                      Xem th√™m <ArrowRightOutlined />
                    </Link>
                  </Card>
                </Col>
              ))}
            </Row>
          </div>
        </section>

        <div className="section-divider">
          <div className="divider-line"></div>
          <div className="divider-icon">
            <RocketOutlined />
          </div>
          <div className="divider-line"></div>
        </div>

        {/* Features Section */}
        <section id="about-features" className="features-section section-container">
          <div className="features-decoration">
            <div className="leaf leaf-1"></div>
            <div className="leaf leaf-2"></div>
            <div className="leaf leaf-3"></div>
          </div>
          <div className="container">
            <Row gutter={[48, 48]} align="middle">
              <Col xs={24} lg={12}>
                <div data-aos="fade-right">
                  <Title level={2} className="features-title">
                    T·∫°i sao ch·ªçn Green Space?
                  </Title>
                  <div className="features-list">
                    {features.map((feature, index) => (
                      <motion.div
                        key={index}
                        className="feature-item"
                        initial={{ opacity: 0, x: -50 }}
                        whileInView={{ opacity: 1, x: 0 }}
                        transition={{ duration: 0.5, delay: 0.1 * index }}
                        viewport={{ once: true }}
                      >
                        <CheckCircleOutlined className="feature-icon" />
                        <Paragraph>{feature}</Paragraph>
                      </motion.div>
                    ))}
                  </div>
                </div>
              </Col>
              <Col xs={24} lg={12}>
                <div className="team-image-wrapper" data-aos="fade-left" data-aos-delay="200">
                  <div className="team-icon-wrapper">
                    <TeamOutlined className="team-icon" />
                  </div>
                  <Title level={3}>ƒê·ªôi ng≈© chuy√™n nghi·ªáp</Title>
                  <Paragraph>
                    V·ªõi ƒë·ªôi ng≈© thi·∫øt k·∫ø gi√†u kinh nghi·ªám v√† ƒëam m√™, ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn nh·ªØng gi·∫£i ph√°p s√°ng t·∫°o v√† ph√π h·ª£p nh·∫•t cho kh√¥ng gian c·ªßa b·∫°n.
                    M·ªói th√†nh vi√™n c·ªßa Green Space ƒë·ªÅu ƒë∆∞·ª£c ƒë√†o t·∫°o chuy√™n s√¢u v√† th∆∞·ªùng xuy√™n c·∫≠p nh·∫≠t xu h∆∞·ªõng thi·∫øt k·∫ø m·ªõi nh·∫•t.
                  </Paragraph>
                </div>
              </Col>
            </Row>
          </div>
        </section>

        <div className="section-divider">
          <div className="divider-line"></div>
          <div className="divider-icon">
            <UserOutlined />
          </div>
          <div className="divider-line"></div>
        </div>

        {/* CTA Section */}
        <section id="about-cta" className="cta-section section-container">
          <div className="cta-bg-shapes">
            <div className="cta-shape shape-1"></div>
            <div className="cta-shape shape-2"></div>
          </div>
          <div className="container">
            <motion.div
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8 }}
              viewport={{ once: true }}
              className="cta-content"
            >
              <Title level={2}>B·∫Øt ƒë·∫ßu d·ª± √°n c·ªßa b·∫°n ngay h√¥m nay</Title>
              <Paragraph>
                H√£y ƒë·ªÉ ch√∫ng t√¥i gi√∫p b·∫°n hi·ªán th·ª±c h√≥a √Ω t∆∞·ªüng v·ªÅ kh√¥ng gian xanh l√Ω t∆∞·ªüng.
                T·ª´ t∆∞ v·∫•n thi·∫øt k·∫ø ƒë·∫øn l·ª±a ch·ªçn v·∫≠t li·ªáu, ch√∫ng t√¥i lu√¥n ƒë·ªìng h√†nh c√πng b·∫°n trong m·ªçi b∆∞·ªõc.
              </Paragraph>
              <div className="cta-buttons">
                <Link to="/designs">
                  <Button type="primary" size="large" className="ripple-btn">
                    Xem thi·∫øt k·∫ø m·∫´u <ArrowRightOutlined />
                  </Button>
                </Link>
                <Link to="/products">
                  <Button size="large" ghost className="ripple-btn">
                    Kh√°m ph√° s·∫£n ph·∫©m
                  </Button>
                </Link>
              </div>
            </motion.div>
          </div>
        </section>
      </Content>
      <Footer />
      <BackTop className="custom-back-top">
        <div className="back-top-inner">
          <UpCircleOutlined />
        </div>
      </BackTop>
    </Layout>
  );
};

export default AboutPage; 